#!/usr/bin/env python3
import os
import csv
import socket
import subprocess
import shutil
from pathlib import Path

# === CONFIGURATION ===
REPO_URL = "https://<username>:<token>@github.com/<org>/<repo>.git"
WORKDIR = Path("/tmp/python_version_audit" if os.name != "nt" else r"C:\temp\python_version_audit")
CSV_FILE = WORKDIR / "python_versions.csv"
BRANCH = "main"

def run_cmd(cmd):
    try:
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        return result.stdout.strip() or result.stderr.strip()
    except Exception as e:
        return str(e)

def get_all_python_cmds():
    """
    Enumerate all python executables in PATH (no nested loops).
    Uses shutil.which() for cross-platform compatibility.
    """
    path_dirs = os.environ.get("PATH", "").split(os.pathsep)
    names = [f"python{n}" for n in ("", "2", "3")] + [f"python{a}.{b}" for a in range(2, 4) for b in range(0, 12)]
    found = {cmd for name in names if (cmd := shutil.which(name))}
    return sorted(found)

def get_versions(cmds):
    """Return list of (hostname, command, version) rows."""
    hostname = socket.gethostname()
    return [
        [hostname, os.path.basename(cmd), run_cmd(f'"{cmd}" --version')]
        for cmd in cmds
    ]

def ensure_repo():
    if not WORKDIR.exists():
        WORKDIR.mkdir(parents=True, exist_ok=True)
        run_cmd(f"git clone {REPO_URL} {WORKDIR}")
    else:
        os.chdir(WORKDIR)
        run_cmd("git pull origin main")

def write_to_csv(rows):
    header = ["hostname", "python_command", "version"]
    exists = CSV_FILE.exists()
    with open(CSV_FILE, "a", newline="") as f:
        writer = csv.writer(f)
        if not exists:
            writer.writerow(header)
        writer.writerows(rows)

def commit_and_push(hostname):
    os.chdir(WORKDIR)
    run_cmd(f"git add {CSV_FILE.name}")
    run_cmd(f'git commit -m "Update python versions from {hostname}"')
    run_cmd(f"git push origin {BRANCH}")

def main():
    ensure_repo()
    cmds = get_all_python_cmds()
    rows = get_versions(cmds)
    write_to_csv(rows)
    commit_and_push(socket.gethostname())
    print(f"[+] Done â€” logged {len(rows)} Python executables on {socket.gethostname()}")

if __name__ == "__main__":
    main()